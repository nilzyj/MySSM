<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--配置文件的引入-->
    <properties resource="jdbc.properties"/>
    <!--指定所用日志的具体实现，在控制台输出SQL语句-->
    <settings>
        <setting name="logImpl" value="LOG4J"/>
    </settings>
    <typeAliases>
        <!--第一种：<typeAlias type="model.Person" alias="Person"/>-->
        <!--第二种--><package name="com.dim.beginspring.model"/>
        <!--第三种 @Alias("User")
                    public class User {
                        private int id;
                        public int getId() {
                            return id;
                        }
                        public void setId(int id) {
                            this.id = id;
                        }
                    }-->
    </typeAliases>
    <!--环境配置，即连接的数据库-->
    <environments default="development">
        <!-- 环境配置开始，可以配置多个环境 而使用哪一个可以在创建session时指定，默认使用default中的值 -->
        <environment id="development">
            <!--事务配置，使用jdbc类型的事务  -->
            <transactionManager type="JDBC"/>
            <!--数据源是一种用来提高数据库连接性能的常规手段，数据源会负责维持一个数据库连接池，
            当程序创建数据源实例时，系统会一次性地创建多个数据库连接，并把这些数据库连接保存到连接池中。
            当程序需要进行数据库访问时，无须重新获得数据库连接，而是从连接池中取出一个空闲的数据库连接，
            当程序使用数据库连接访问数据库结束后，无须关闭数据库连接，而是将数据库连接归还给连接池即可。-->
            <!--数据源配置，使用库链接池类型（JDBC连接对象的数据源连接池的实现） -->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--持久化类的映射文件-->
    <mappers>
        <!--<sqlmapper resource="sqlmap_user.xml"/>-->
        <!--<sqlmapper class="com.dim.beginspring.sqlmapperper"/>-->
        <package name="com.dim.beginspring.sqlmapper"/>
    </mappers>
</configuration>